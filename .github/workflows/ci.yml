name: CI

on: 
  push:
    branches: 
    - master
  pull_request:
    branches:
    - master

jobs:
  formatting:
    name: Formatting
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Check formatting
      run: |
        npm ci
        npm run format:check
      env:
        CI: true

  build-code-splitting-dynamic-imports:
    name: Build - code-splitting/dynamic-imports
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Webpack Build
      run: |
        cd ./code-splitting/dynamic-imports
        npm ci
        npm run build
      env:
        CI: true

  build-code-splitting-dynamic-imports-with-react:
    name: Build - code-splitting/dynamic-imports-with-react
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Webpack Build
      run: |
        cd ./code-splitting/dynamic-imports-with-react
        npm ci
        npm run build
      env:
        CI: true
        
  build-code-splitting-entry-dependencies:
    name: Build - code-splitting/entry-dependencies
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Webpack Build
      run: |
        cd ./code-splitting/entry-dependencies
        npm ci
        npm run build
      env:
        CI: true

  build-code-splitting-external-dependencies:
    name: Build - code-splitting/external-dependencies
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Webpack Build
      run: |
        cd ./code-splitting/external-dependencies
        npm ci
        npm run build
      env:
        CI: true

  build-code-splitting-split-chunks-plugin:
    name: Build - code-splitting/split-chunks-plugin
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Webpack Build
      run: |
        cd ./code-splitting/split-chunks-plugin
        npm ci
        npm run build
      env:
        CI: true
